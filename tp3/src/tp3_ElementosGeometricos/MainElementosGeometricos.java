/*
 * 3 Elementos Geom√©tricos
Implementar la clase punto geom√©trico, la cual posee dos valores de coordenada X, Y.
El valor por defecto de los mismos es (0,0)
La funcionalidad que posee la clase es la siguiente:
‚ó? Desplazar el punto en el plano. Se encarga de trasladar el punto a otra posici√≥n
del plano. Para esto se incrementan los valores de X e Y en una cierta cantidad
(cierto desplazamiento en X y cierto desplazamiento en Y).
‚ó? Calcular la distancia eucl√≠dea. Dado un punto es posible establecer la distancia
eucl√≠dea con otro punto acorde a la siguiente formula:
Distancia 2 = ( X1 ‚Äì X2 ) 2 + (Y1 ‚Äì Y2) 2
 La clase Math de Java define un m√©todo de clase sqrt para el c√°lculo de la ra√≠z
cuadrada.
Implementar la clase Rect√°ngulo.
Para esta clase es necesario definir el rect√°ngulo utilizando los puntos como v√©rtices. Se
trabajar√° con Rect√°ngulos cuyos lados est√©n paralelos a los ejes.
Nota. Definir la estructura que deber poseer un rect√°ngulo y en base a esto implementar
los atributos de la clase.
La funcionalidad que debe proveer un rect√°ngulo es la siguiente
‚ó? Desplazarlo en el plano. Trasladar el rect√°ngulo acorde a ciertos valores de X e
Y.
‚ó? Calcular el √?rea del rect√°ngulo.
‚ó? Compararlo con otro rect√°ngulo. Devolver 1 si el rect√°ngulo es mayor, 0 si son
iguales y -1 si es menor. Se dice que un rect√°ngulo es mayor que otro si el √°rea
del mismo es mayor que la del otro.
‚ó? Determinar si el rect√°ngulo es un cuadrado, es decir, decidir si se cumplen las
propiedades para que sea un cuadrado.
‚ó? Determinar el largo del lado superior.
‚ó? Determinar si est√° acostado o parado (si el alto es m√°s que el ancho). 
 */
package tp3_ElementosGeometricos;

public class MainElementosGeometricos {

	public static void main(String[] args) {
		GeometricPoint point1 = new GeometricPoint(1, 3);
		GeometricPoint point2 = new GeometricPoint(4, 5);
		GeometricPoint point3 = new GeometricPoint(10, 2);
		GeometricPoint point4 = new GeometricPoint(15, 8);
		
		GeometricPoint point5 = new GeometricPoint(10, 15);
		GeometricPoint point6 = new GeometricPoint(4, 9);
		GeometricPoint point7 = new GeometricPoint(1, 10);
		GeometricPoint point8 = new GeometricPoint(4, 5);
		

//		
		System.out.println("La distancia en X es: "+point1.calculateDistanceX(point2));
		System.out.println("La distancia en Y es: "+point1.calculateDistanceY(point2));
		
		Rect rect = new Rect(point1, point2, point3, point4);
		System.out.println("La cantidad de rect√°ngulos creados es: "+Rect.getAmountCreated());
		System.out.println("El largo superior mide: "+rect.topSideLength());
		
		Rect rect1 = new Rect(point5, point6, point7, point8);
		System.out.println("La cantidad de rect√°ngulos creados es: "+Rect.getAmountCreated());
//		
		System.out.println(rect.toString());
		System.out.println(rect1.toString());
		System.out.println("La altura es: "+rect.calculateHeight());
		System.out.println("La base es: "+rect.calculateBase());
		System.out.println("EL √°rea es: "+rect.calculateArea());
		System.out.println("La altura es: "+rect1.calculateHeight());
		System.out.println("La base es: "+rect1.calculateBase());
		System.out.println("El √°rea es: "+rect1.calculateArea());
		System.out.println("¬øEs mayor? "+rect1.isBigger(rect));
		System.out.println("¬øEs cuadrado? "+rect.isSquare());
		System.out.println("¬øEs horizontal? "+rect.isHorizontal());
				rect.drawRect(point1, point3, point4, point4);
		System.out.println("El √°rea del rect√°ngulo es: "+rect.calculateArea());
		rect.shiftRect(4, 2);
		System.out.println(rect.toString());

		
		
//		Rectangle rec1 = new Rectangle(point1, point3);
//	
//		rec1.setVertexTwo(point2);
//		
//		rec1.setVertexFour(point4);		
//		System.out.println(point1.toString()); 
//		point1.setX(4);
//		point1.setY(10);
//		System.out.println(point1.toString()); 
//		point1.shiftPoint(4, 4);
//		System.out.println(point1.toString()); 
//		
//		System.out.println(point1.calculateEuclideanDistance(point3.getX(), point3.getY())+
//		" es la distancia eucl√≠dea entre los puntos"+
//		"\nX1: "+point1.getX()+" / Y1: " +point1.getY()+
//		"\nX2: "+point3.getX()+" / Y2: "+point3.getY()); 
//		
//		System.out.println(rec1.toString());
//
	}

}
